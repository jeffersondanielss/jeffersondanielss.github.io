@charset "UTF-8";
/* http://prismjs.com/download.html?themes=prism-okaidia&languages=markup+clike+javascript */
/**
 * okaidia theme for JavaScript, CSS and HTML
 * Loosely based on Monokai textmate theme by http://www.monokai.nl/
 * @author ocodia
 */
code[class*="language-"],
pre[class*="language-"] {
  color: #f8f8f2;
  text-shadow: 0 1px rgba(0, 0, 0, 0.3);
  font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
  direction: ltr;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.5;
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none; }

/* Code blocks */
pre[class*="language-"] {
  padding: 1em;
  margin: .5em 0;
  overflow: auto;
  border-radius: 0.3em; }

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background: #272822; }

/* Inline code */
:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em;
  white-space: normal; }

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: slategray; }

.token.punctuation {
  color: #f8f8f2; }

.namespace {
  opacity: .7; }

.token.property,
.token.tag,
.token.constant,
.token.symbol,
.token.deleted {
  color: #f92672; }

.token.boolean,
.token.number {
  color: #ae81ff; }

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: #a6e22e; }

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
  color: #f8f8f2; }

.token.atrule,
.token.attr-value,
.token.function {
  color: #e6db74; }

.token.keyword {
  color: #66d9ef; }

.token.regex,
.token.important {
  color: #fd971f; }

.token.important,
.token.bold {
  font-weight: bold; }

.token.italic {
  font-style: italic; }

.token.entity {
  cursor: help; }

/*------------------------------------*\
    CSSCV
\*------------------------------------*/
/*!*
 * 
 * CSSCV -- csswizardry.com/csscv -- @csswizardry
 * 
 */
/**
 * CSSCV is a simple, opinionated stylesheet for formatting semantic HTML to
 * look like a CSS file. Apply the class of `.csscv` to the `html` element of
 * your page to invoke the CSSCV stylesheet. Removing this class will leave you
 * with an unstyled page of pure, semantic HTML. This is useful if you wish to
 * disable CSSCV in order to style your page more suitably for recruiters and
 * more serious applications.
 */
.csscv {
  /*------------------------------------*\
      #CONTENTS
  \*------------------------------------*/
  /**
   * SETTINGS
   * RESET
   * HELPERS
   * BASE
   * RULESETS
   * SELECTORS
   * DECLARATIONS
   * PROPERTIES
   * VALUES
   * STRINGS
   * NUMBERS
   * URLS
   * LISTS
   * BEM
   * COMMENTS
   * NOTICE
   */
  /*------------------------------------*\
      #SETTINGS
  \*------------------------------------*/
  /**
   * How big would you like your tabs to be?
   */
  /**
   * Colour settings.
   */
  /**
   * Reassign colour variables to better names.
   */
  /*------------------------------------*\
      #RESET
  \*------------------------------------*/
  /**
   * This is a pretty poor reset, but it will suffice for a single-page, single-
   * responsibility stylesheet.
   *
   * 1. Everything the same size (16px by default).
   * 2. Fixes an odd font-sizing issue in some browsers.
   */
  /*------------------------------------*\
      #HELPERS
  \*------------------------------------*/
  /**
   * Little helper classes to allow us to quickly build stuff.
   *
   * 1. Space apart our rulesets by the same value as our line-height.
   */
  /*------------------------------------*\
      #BASE
  \*------------------------------------*/
  /**
   * 1. Comfortable line-height (equivalent to 24px).
   * 2. Pad the page by the same value as our line-height.
   */
  /*------------------------------------*\
      #RULESETS
  \*------------------------------------*/
  /**
   * Wrap our selector and declarations in an element with a class of `.ruleset`.
   */
  /*------------------------------------*\
      #SELECTORS
  \*------------------------------------*/
  /**
   * Each section is marked up as a heading which becomes our selector. We assume
   * all our selectors will be classes.
   *
   * 1. Lowercase our class names.
   * 2. Prepend a period.
   * 3. Append an opening brace.
   */
  /**
   * Insert a hyphen in place of a space in multiple word selectors.
   *
   * 1. Force the empty element to take up its space.
   */
  /*------------------------------------*\
      #DECLARATIONS
  \*------------------------------------*/
  /**
   * Each block of declarations is marked up as a definition list with a class of
   * `.declarations`.
   *
   * 1. Close our declarations with a curly brace.
   */
  /*------------------------------------*\
      #PROPERTIES
  \*------------------------------------*/
  /**
   * A `dt` and `dd` form a propertyÔÇôvalue pair (i.e. declaration). Each `dt` gets
   * a class of `.property`.
   *
   * 1. Indent our declarations based on the chosen tab size.
   * 2. End each property with a colon and a space.
   */
  /*------------------------------------*\
      #VALUES
  \*------------------------------------*/
  /**
   * Each `dd` gets a class of `.value`.
   *
   * 1. End each value with a semi-colon.
   */
  /*------------------------------------*\
      #STRINGS
  \*------------------------------------*/
  /**
   * Strings in CSS (such as font names) need to be enclosed in quotes. Wrap
   * strings in your CV with a `span` with a class of `.string`, e.g.
   * `<span class="string">Harry Roberts</span>`.
   */
  /*------------------------------------*\
      #NUMBERS
  \*------------------------------------*/
  /**
   * Numbers in values need wrapping in a `.number` element.
   */
  /*------------------------------------*\
      #URLS
  \*------------------------------------*/
  /**
   * Wrap any URLs with a `span` with a class of `.url`.
   */
  /*------------------------------------*\
      #LISTS
  \*------------------------------------*/
  /**
   * Lists of values should be marked up with a `ul` with a class of `.value-list`.
   */
  /*------------------------------------*\
      #BEM
  \*------------------------------------*/
  /**
   * Denote any relationships within your CV with BEM-style naming.
   *
   * 1. An element of an item is prepended with the namespace you set (via
   *    `data-namespace` in your markup) and two underscores.
   * 2. A modifier of an item is prepended with the namespace you set (via
   *    `data-namespace` in your markup) and two hyphens.
   */
  /*------------------------------------*\
      #COMMENTS
  \*------------------------------------*/
  /**
   * Create inline comments.
   */
  /**
   * Create multi-line, DocBlock style comments.
   */
  /*------------------------------------*\
      #NOTICE
  \*------------------------------------*/
  /**
   * The attribution notice that appears at the bottom of a CSSCV page.
   *
   * 1. Only display the message if CSSCV is enabled; the notice carries an inline
   *    style of `display: none;` which will take effect once CSSCV is disabled.
   */ }
  .csscv * {
    margin: 0;
    padding: 0;
    font-size: 100%;
    /* [1] */
    font-family: monospace, monospace;
    /* [2] */
    font-weight: normal; }
  .csscv .spaced,
  .csscv .ruleset,
  .csscv .notice {
    margin-bottom: 24px;
    /* [1] */
    margin-bottom: 1.5rem;
    /* [1] */ }
  .csscv .spaced--large {
    margin-bottom: 120px;
    margin-bottom: 7.5rem; }
  .csscv .indented {
    padding-left: 2.5em; }
  .csscv {
    line-height: 1.5;
    /* [1] */
    padding: 24px;
    /* [2] */
    padding: 1.5rem;
    /* [2] */
    padding-bottom: 0;
    color: #4f6c73;
    background-color: #002935; }
  .csscv a {
    color: inherit; }
  .csscv .selector {
    color: #0083ce;
    text-transform: lowercase;
    /* [1] */ }
    .csscv .selector:before {
      content: ".";
      /* [2] */ }
    .csscv .selector:after {
      content: " {";
      /* [3] */ }
  .csscv .selector__delimiter {
    position: relative;
    white-space: pre;
    /* [1] */ }
    .csscv .selector__delimiter:before {
      content: "-";
      position: absolute;
      display: inline-block;
      width: .625em;
      text-align: center; }
  .csscv .declarations:after {
    content: "}";
    /* [1] */
    color: #0083ce; }
  .csscv .property {
    text-transform: lowercase;
    float: left;
    clear: both;
    padding-left: 2.5em;
    /* [1] */
    color: #b58a0a; }
    .csscv .property:after {
      content: ":\00A0";
      /* [2] */
      color: #7f9597; }
  .csscv .value {
    color: #b58a0a; }
    .csscv .value:after {
      content: ";";
      /* [1] */
      color: #7f9597; }
  .csscv .string {
    color: #00a19b; }
    .csscv .string:before, .csscv .string:after {
      content: "\""; }
  .csscv .number {
    color: #00a19b; }
  .csscv .url:before {
    content: "url("; }
  .csscv .url:after {
    content: ")"; }
  .csscv .value-list {
    list-style: none;
    display: inline; }
    .csscv .value-list > li {
      display: inline; }
      .csscv .value-list > li:after {
        content: ", "; }
      .csscv .value-list > li:last-child:after {
        content: ""; }
  .csscv .element:before {
    content: attr(data-namespace) "__";
    /* [1] */ }
  .csscv .modifier:before {
    content: attr(data-namespace) "--";
    /* [2] */ }
  .csscv .comment {
    color: #7f9597; }
    .csscv .comment:before {
      content: "/* "; }
    .csscv .comment:after {
      content: " */"; }
  .csscv .comment-block {
    color: #7f9597; }
    .csscv .comment-block:before, .csscv .comment-block:after {
      display: block; }
    .csscv .comment-block:before {
      content: "/**"; }
    .csscv .comment-block:after {
      content: "\00A0*/"; }
  .csscv .comment-block__line {
    display: block; }
    .csscv .comment-block__line:before {
      content: "\00A0*\00A0"; }
  .csscv .notice {
    display: block !important;
    /* [1] */ }

/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
*, *:before, *:after {
  margin: 0;
  padding: 0;
  border: 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent;
  text-decoration: none; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
  max-width: 100%; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Remove margin
 */
figure {
  margin: 0; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

li {
  list-style: none; }

/* Blockquote
   ========================================================================== */
blockquote {
  margin: 0; }

.clearfix:after {
  clear: both;
  content: ' ';
  display: block;
  font-size: 0;
  line-height: 0;
  visibility: hidden;
  width: 0;
  height: 0; }

.clearfix {
  display: inline-block; }

* html .clearfix {
  height: 1%; }

.clearfix {
  display: block; }

/*-----------------------*\
          MIXINS
\*-----------------------*/
/*-----------------------*\
       PLACEHOLDERS
\*-----------------------*/
.link, .post-container a {
  color: #1B1E25;
  display: inline-block;
  position: relative; }
  .link:after, .post-container a:after {
    content: '';
    display: block;
    width: 20px;
    height: 1px;
    background: currentColor;
    text-align: center;
    transition: .5s ease-in-out; }
  .link:hover:after, .post-container a:hover:after {
    width: 100%;
    transition: .5s ease-in-out; }

html, body, main {
  height: 100%; }

body {
  font-family: 'Dosis', sans-serif;
  font-size: 16px;
  color: #58595B; }

.uppercase {
  text-transform: uppercase; }

.visuallyhidden {
  display: none; }

.visible {
  display: block; }

.wrapper-large, .wrapper {
  width: 90%;
  margin: 0 auto;
  position: initial; }

.wrapper-meddium {
  width: 75%;
  margin: 0 auto;
  position: initial; }

.wrapper-small {
  width: 60%;
  margin: 0 auto;
  position: initial; }

strong {
  font-weight: 700; }

.row {
  float: left;
  width: 100%; }

svg {
  width: inherit;
  height: inherit; }

.align-center {
  text-align: center; }

.align-right, .about__content--me {
  text-align: right; }

h1, h2, h3, h4, h5, h6 {
  color: #1B1E25; }

a {
  color: #1B1E25; }

.footer {
  background: #1B1E25;
  color: #FFFFFF;
  text-align: center;
  padding: 10px 0; }
  .footer a {
    color: #FFFFFF; }

.heart {
  color: #FF0000;
  margin-left: 3px; }

.scroll-btn {
  display: block;
  position: absolute;
  left: 0;
  right: 0;
  text-align: center;
  bottom: 20px; }

.scroll-btn > * {
  display: inline-block;
  line-height: 18px;
  font-size: 13px;
  font-weight: normal;
  color: #7f8c8d;
  color: #ffffff;
  font-family: "proxima-nova", "Helvetica Neue", Helvetica, Arial, sans-serif;
  letter-spacing: 2px; }

.scroll-btn > *:hover,
.scroll-btn > *:focus,
.scroll-btn > *.active {
  color: #ffffff; }

.scroll-btn > *:hover,
.scroll-btn > *:focus,
.scroll-btn > *:active,
.scroll-btn > *.active {
  opacity: 0.8;
  filter: alpha(opacity=80); }

.scroll-btn .mouse {
  position: relative;
  display: block;
  width: 35px;
  height: 55px;
  margin: 0 auto 20px;
  box-sizing: border-box;
  border: 3px solid white;
  border-radius: 23px; }

.scroll-btn .mouse > * {
  position: absolute;
  display: block;
  top: 29%;
  left: 50%;
  width: 8px;
  height: 8px;
  margin: -4px 0 0 -4px;
  background: white;
  border-radius: 50%;
  animation: mouse 2.5s linear infinite; }

@-webkit-keyframes mouse {
  0% {
    opacity: 1;
    top: 29%; }
  15% {
    opacity: 1;
    top: 50%; }
  50% {
    opacity: 0;
    top: 50%; }
  100% {
    opacity: 0;
    top: 29%; } }
@-moz-keyframes mouse {
  0% {
    opacity: 1;
    top: 29%; }
  15% {
    opacity: 1;
    top: 50%; }
  50% {
    opacity: 0;
    top: 50%; }
  100% {
    opacity: 0;
    top: 29%; } }
@keyframes mouse {
  0% {
    opacity: 1;
    top: 29%; }
  15% {
    opacity: 1;
    top: 50%; }
  50% {
    opacity: 0;
    top: 50%; }
  100% {
    opacity: 0;
    top: 29%; } }
.post-card {
  float: left;
  clear: none;
  width: 31.33333%;
  margin-left: 0;
  margin-right: 3%; }
  .post-card:last-child {
    margin-right: 0; }

.container-posts {
  *zoom: 1; }
  .container-posts:before, .container-posts:after {
    content: '';
    display: table; }
  .container-posts:after {
    clear: both; }

.post-card__title {
  font-weight: bold;
  margin-top: 10px;
  color: #1B1E25; }

@media screen and (max-width: 768px) {
  .post-card {
    float: left;
    clear: none;
    width: 100%;
    margin-left: 0;
    margin-right: 3%;
    text-align: center;
    margin-bottom: 30px; }
    .post-card:nth-of-type(n) {
      margin-right: 3%;
      float: left;
      clear: none; }
    .post-card:nth-of-type(1n) {
      margin-right: 0;
      float: right; }
    .post-card:nth-of-type(1n + 1) {
      clear: both; } }
/* Icon 1 */
#hamburger {
  width: 50px;
  height: 45px;
  position: absolute;
  transform: rotate(0deg);
  transition: .5s ease-in-out;
  cursor: pointer;
  right: 30px;
  top: 30px;
  z-index: 90; }

#hamburger span {
  display: block;
  position: absolute;
  height: 3px;
  width: 50%;
  background: #FFFFFF;
  opacity: 1;
  transform: rotate(0deg);
  transition: .5s ease-in-out; }

#hamburger span:nth-child(even) {
  left: 50%;
  border-radius: 0 9px 9px 0; }

#hamburger span:nth-child(odd) {
  left: 0px;
  border-radius: 9px 0 0 9px; }

#hamburger.open {
  position: fixed; }
  #hamburger.open span {
    background: #1B1E25; }

#hamburger span:nth-child(1), #hamburger span:nth-child(2) {
  top: 0px; }

#hamburger span:nth-child(3), #hamburger span:nth-child(4) {
  top: 13px; }

#hamburger span:nth-child(5), #hamburger span:nth-child(6) {
  top: 26px; }

#hamburger.open span:nth-child(1), #hamburger.open span:nth-child(6) {
  transform: rotate(45deg); }

#hamburger.open span:nth-child(2), #hamburger.open span:nth-child(5) {
  transform: rotate(-45deg); }

#hamburger.open span:nth-child(1) {
  left: 5px;
  top: 7px; }

#hamburger.open span:nth-child(2) {
  left: calc(50% - 5px);
  top: 7px; }

#hamburger.open span:nth-child(3) {
  left: -50%;
  opacity: 0; }

#hamburger.open span:nth-child(4) {
  left: 100%;
  opacity: 0; }

#hamburger.open span:nth-child(5) {
  left: 5px;
  top: 23px; }

#hamburger.open span:nth-child(6) {
  left: calc(50% - 5px);
  top: 23px; }

.menu {
  width: 100%;
  height: 100%;
  position: fixed;
  background: #FFFFFF;
  z-index: -1;
  transform: scale(1.5);
  opacity: 0; }

.menu--active {
  z-index: 80;
  transition: .5s linear;
  transform: scale(1);
  opacity: 1; }

.menu__container {
  position: relative;
  top: 50%;
  transform: translateY(-50%); }

.menu__item {
  color: #1B1E25;
  display: block;
  text-align: center;
  margin-bottom: 50px;
  font-size: 20px; }
  .menu__item:last-child {
    font-weight: bold;
    font-size: 25px; }

.list {
  margin: 30px 0; }

.list__item {
  margin-bottom: 10px; }

.logo {
  color: #FFFFFF;
  font-size: 20px;
  margin: 30px 0 0 30px;
  display: inline-block; }

#disqus_thread {
  margin-top: 30px; }

.header, .header--little {
  background: #1B1E25;
  overflow: hidden;
  position: relative; }

.header {
  height: 100%; }

.header--little {
  height: 30%; }

.header__title {
  text-align: center;
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  color: #FFFFFF;
  font-size: 50px; }

@media screen and (max-width: 768px) {
  .header__title {
    font-size: 30px; } }
.about-work, .about-me {
  *zoom: 1;
  padding: 100px 0px; }
  .about-work:before, .about-work:after, .about-me:before, .about-me:after {
    content: '';
    display: table; }
  .about-work:after, .about-me:after {
    clear: both; }
  .about-work .wrapper-large, .about-work .wrapper, .about-me .wrapper-large, .about-me .wrapper {
    *zoom: 1; }
    .about-work .wrapper-large:before, .about-work .wrapper:before, .about-work .wrapper-large:after, .about-work .wrapper:after, .about-me .wrapper-large:before, .about-me .wrapper:before, .about-me .wrapper-large:after, .about-me .wrapper:after {
      content: '';
      display: table; }
    .about-work .wrapper-large:after, .about-work .wrapper:after, .about-me .wrapper-large:after, .about-me .wrapper:after {
      clear: both; }

.about__ilustrations {
  float: left;
  clear: none;
  width: 48.5%;
  margin-left: 0;
  margin-right: 3%;
  font-size: 140px;
  text-align: center;
  color: #1B1E25; }
  .about__ilustrations:last-child {
    margin-right: 0; }

.about__ilustration {
  float: left;
  clear: none;
  width: 31.33333%;
  margin-left: 0;
  margin-right: 3%; }
  .about__ilustration:last-child {
    margin-right: 0; }

.about__ilustrations--me {
  float: right; }

.about__content {
  float: left;
  clear: none;
  width: 48.5%;
  margin-left: 0;
  margin-right: 3%; }
  .about__content:last-child {
    margin-right: 0; }

.about__title {
  margin-bottom: 40px;
  font-size: 30px; }

.about__text {
  margin-bottom: 20px; }

@media screen and (max-width: 768px) {
  .about-work, .about-me {
    padding: 50px 0px; }

  .about__ilustrations, .about__content {
    float: left;
    clear: none;
    width: 100%;
    margin-left: 0;
    margin-right: 3%; }
    .about__ilustrations:nth-of-type(n), .about__content:nth-of-type(n) {
      margin-right: 3%;
      float: left;
      clear: none; }
    .about__ilustrations:nth-of-type(1n), .about__content:nth-of-type(1n) {
      margin-right: 0;
      float: right; }
    .about__ilustrations:nth-of-type(1n + 1), .about__content:nth-of-type(1n + 1) {
      clear: both; }

  .about__ilustrations {
    margin-bottom: 20px; }

  .about__ilustrations--me {
    float: left; }

  .about__content--me {
    text-align: left; } }
.blog {
  padding: 100px 0;
  background: #F5F5F5; }

.blog__title {
  text-align: center;
  font-size: 40px;
  margin-bottom: 40px; }

.post-page {
  background: #F5F5F5; }

.post__date {
  position: absolute;
  right: 10px;
  top: 10px;
  color: #FFFFFF;
  background: #1B1E25;
  padding: 5px;
  border-radius: 5px; }

.post-container {
  width: 60%;
  position: relative;
  margin: -50px auto 50px;
  background: #FFFFFF;
  padding: 50px;
  box-shadow: 0 2px 2px #CCCCCC;
  font-size: 18px;
  min-height: 70%; }
  .post-container p {
    margin-bottom: 20px; }
  .post-container h1, .post-container h2, .post-container h3, .post-container h4, .post-container h5, .post-container h6 {
    margin-bottom: 20px; }
  .post-container pre {
    margin-bottom: 20px;
    font-size: 16px; }
  .post-container strong {
    color: #1B1E25; }

.post__title {
  font-size: 30px;
  margin-bottom: 20px; }

@media screen and (max-width: 768px) {
  .post-container {
    width: 90%;
    padding: 30px; } }

/*# sourceMappingURL=main.css.map */
